/* 
* dp[i][j] = dp[i-1][j] + dp[i][j-1]
* dp[i][j] = dp[i-1][j]
* dp[i][j] = dp[i][j-1]

* dp[0][0] = 1
*/
func uniquePaths(m int, n int) int {
    dp := make([][]int, m)
    for row, _ := range dp {
        dp[row] = make([]int, n)
        for col, _ := range dp[row] {
            if row == 0 && col == 0 {
                dp[row][col] = 1
                continue
            }
            
            ways := 0
            if row != 0 {
                ways += dp[row-1][col]
            }
            if col != 0 {
                ways += dp[row][col-1]
            }
            dp[row][col] = ways
        }
    }

    return dp[m-1][n-1]
}