func minDays(bloomDay []int, m int, k int) int {
    n := len(bloomDay)

    if m * k > n {
        return -1
    }

    left, right := 1, 1000000000
    for left < right {
        mid := (left + right) / 2

        if canMakeBouq(bloomDay,  mid, m, k) {
            right = mid
        } else {
            left = mid + 1
        }
    }

    return left
}

func canMakeBouq(bloomDay []int, days, m, k int) bool {
    bouq := 0
    seq := 0
    for i := 0; i < len(bloomDay) && bouq < m; i++ {
        if bloomDay[i] > days {
            seq = 0
            continue
        } 
        seq++
        if seq == k {
            bouq++
            seq = 0 // start again new sequence
        }
    }

    return bouq >= m
}