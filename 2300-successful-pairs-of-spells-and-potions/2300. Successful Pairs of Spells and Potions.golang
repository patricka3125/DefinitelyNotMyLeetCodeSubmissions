func successfulPairs(spells []int, potions []int, success int64) []int {
	sort.Ints(potions)

	res := make([]int, len(spells))
    for i, spell := range spells {
        res[i] = numPairs(spell, potions, success)
    }

    return res
}

func numPairs(spell int, potions []int, success int64) int {
	l, r := 0, len(potions)-1

	for l <= r {
		i := l + (r-l)/2
		str := int64(spell) * int64(potions[i])

		// check left
		if str < success {
            if i == len(potions) - 1 {
                return 0
            }
			if int64(spell)*int64(potions[i+1]) >= success {
				return len(potions) - (i + 1)
			}
			l = i + 1
		}

		if str >= success {
            if i == 0 {
                return len(potions)
            }
			r = i - 1
		}
	}
    return 0
}